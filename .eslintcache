[{"E:\\Coding\\louvre\\src\\index.js":"1","E:\\Coding\\louvre\\src\\reportWebVitals.js":"2","E:\\Coding\\louvre\\src\\App.js":"3","E:\\Coding\\louvre\\src\\config\\fbConfig.js":"4","E:\\Coding\\louvre\\src\\store\\reducers\\rootReducer.js":"5","E:\\Coding\\louvre\\src\\store\\reducers\\authReducer.js":"6","E:\\Coding\\louvre\\src\\components\\auth\\SignUp.js":"7","E:\\Coding\\louvre\\src\\components\\layout\\Navbar.js":"8","E:\\Coding\\louvre\\src\\components\\auth\\SignIn.js":"9","E:\\Coding\\louvre\\src\\components\\auth\\Profile.js":"10","E:\\Coding\\louvre\\src\\components\\layout\\SignedInLinks.js":"11","E:\\Coding\\louvre\\src\\components\\layout\\SignedOutLinks.js":"12","E:\\Coding\\louvre\\src\\store\\actions\\authActions.js":"13","E:\\Coding\\louvre\\src\\store\\reducers\\postReducer.js":"14","E:\\Coding\\louvre\\src\\store\\actions\\postActions.js":"15","E:\\Coding\\louvre\\src\\components\\posts\\PostsList.js":"16","E:\\Coding\\louvre\\src\\components\\posts\\PostSummary.js":"17","E:\\Coding\\louvre\\src\\components\\posts\\CreatePost.js":"18","E:\\Coding\\louvre\\src\\components\\posts\\PostDetails.js":"19","E:\\Coding\\louvre\\src\\components\\posts\\PostComments.js":"20","E:\\Coding\\louvre\\src\\components\\main\\Gallery.js":"21","E:\\Coding\\louvre\\src\\components\\layout\\Header.js":"22","E:\\Coding\\louvre\\src\\components\\layout\\Footer.js":"23","E:\\Coding\\louvre\\src\\components\\layout\\Profile.js":"24","E:\\Coding\\louvre\\src\\components\\posts\\EditPost.js":"25","E:\\Coding\\louvre\\src\\components\\main\\Intro.js":"26","E:\\Coding\\louvre\\src\\components\\main\\Users.js":"27","E:\\Coding\\louvre\\src\\components\\posts\\NewPostDemo.js":"28"},{"size":1600,"mtime":1610043301894,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"30"},{"size":1731,"mtime":1611140236421,"results":"32","hashOfConfig":"30"},{"size":466,"mtime":1608743572777,"results":"33","hashOfConfig":"30"},{"size":417,"mtime":1608729618098,"results":"34","hashOfConfig":"30"},{"size":1011,"mtime":1610824505664,"results":"35","hashOfConfig":"30"},{"size":2986,"mtime":1610960794797,"results":"36","hashOfConfig":"30"},{"size":2486,"mtime":1611166512579,"results":"37","hashOfConfig":"30"},{"size":1740,"mtime":1609509097652,"results":"38","hashOfConfig":"30"},{"size":3138,"mtime":1611165017661,"results":"39","hashOfConfig":"30"},{"size":1074,"mtime":1611165646717,"results":"40","hashOfConfig":"30"},{"size":326,"mtime":1608806103269,"results":"41","hashOfConfig":"30"},{"size":2342,"mtime":1610825405022,"results":"42","hashOfConfig":"30"},{"size":1767,"mtime":1610825518755,"results":"43","hashOfConfig":"30"},{"size":4150,"mtime":1610825632301,"results":"44","hashOfConfig":"30"},{"size":1386,"mtime":1610961342179,"results":"45","hashOfConfig":"30"},{"size":1297,"mtime":1610962342312,"results":"46","hashOfConfig":"30"},{"size":3137,"mtime":1611159034848,"results":"47","hashOfConfig":"30"},{"size":5850,"mtime":1611163954464,"results":"48","hashOfConfig":"30"},{"size":3512,"mtime":1611164891891,"results":"49","hashOfConfig":"30"},{"size":704,"mtime":1611163868425,"results":"50","hashOfConfig":"30"},{"size":276,"mtime":1608789425232,"results":"51","hashOfConfig":"30"},{"size":550,"mtime":1610810059912,"results":"52","hashOfConfig":"30"},{"size":1438,"mtime":1609784413474,"results":"53","hashOfConfig":"30"},{"size":2981,"mtime":1611161306861,"results":"54","hashOfConfig":"30"},{"size":1048,"mtime":1610963113713,"results":"55","hashOfConfig":"30"},{"size":2813,"mtime":1610961956123,"results":"56","hashOfConfig":"30"},{"size":1653,"mtime":1611160756730,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},"bsy4tb",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"61"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"61"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"61"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"61"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"E:\\Coding\\louvre\\src\\index.js",["121"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider, useSelector } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase, isLoaded } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\nimport firebase from 'firebase/app';\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n    reduxFirestore(fbConfig),\n  ),\n);\n\nconst profileSpecificProps = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n};\n\nconst rrfProps = {\n  firebase,\n  config: fbConfig,\n  config: profileSpecificProps,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n};\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector((state) => state.firebase.auth);\n\n  if (!isLoaded(auth))\n    return (\n      <div className=\"progress centr2\">\n        <div className=\"indeterminate\"></div>\n      </div>\n    );\n\n  return children;\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <AuthIsLoaded>\n          <App />\n        </AuthIsLoaded>\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\nreportWebVitals();\n",["122","123"],"E:\\Coding\\louvre\\src\\reportWebVitals.js",[],"E:\\Coding\\louvre\\src\\App.js",[],"E:\\Coding\\louvre\\src\\config\\fbConfig.js",[],"E:\\Coding\\louvre\\src\\store\\reducers\\rootReducer.js",[],"E:\\Coding\\louvre\\src\\store\\reducers\\authReducer.js",[],"E:\\Coding\\louvre\\src\\components\\auth\\SignUp.js",[],"E:\\Coding\\louvre\\src\\components\\layout\\Navbar.js",["124","125"],"import React, { useState } from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props;\r\n  const [nightMode, setNightMode] = useState(false);\r\n\r\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\r\n  const userMobile = auth.uid ? <Profile profile={profile} /> : null;\r\n\r\n  function darkMode() {\r\n    var element = document.body;\r\n    element.classList.toggle('darkMode');\r\n  }\r\n  return (\r\n    <nav id=\"navbar\" className=\"nav-wrapper navBar\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo louvFont\">\r\n          Louvre\r\n        </Link>\r\n        <a href=\"/\" data-target=\"slide-out\" className=\"sidenav-trigger\">\r\n          <i className=\"material-icons\">menu</i>\r\n        </a>\r\n        <div className=\"hide-on-med-and-down\">\r\n          <ul className=\"right \">\r\n            <li>\r\n              <Link to=\"/welcome\">About</Link>\r\n            </li>\r\n            {links}\r\n            <li>\r\n              <a\r\n                className={nightMode === true ? 'btn black white-text' : 'btn white black-text'}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  setNightMode(!nightMode);\r\n                  darkMode();\r\n                }}>\r\n                {nightMode === true ? 'day' : 'night'}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <ul id=\"slide-out\" className=\"sidenav navBarMob\">\r\n        <li>{userMobile}</li>\r\n        <li>\r\n          <NavLink to=\"/\" className=\"louvFont\">\r\n            Louvre\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/welcome\">About</Link>\r\n        </li>\r\n        {links}\r\n        <li>\r\n          <a\r\n            className={nightMode === true ? 'btn black white-text' : 'btn white black-text'}\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              setNightMode(!nightMode);\r\n              darkMode();\r\n            }}>\r\n            {nightMode === true ? 'day' : 'night'}\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","E:\\Coding\\louvre\\src\\components\\auth\\SignIn.js",[],"E:\\Coding\\louvre\\src\\components\\auth\\Profile.js",[],"E:\\Coding\\louvre\\src\\components\\layout\\SignedInLinks.js",["126","127"],"import React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/actions/authActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst SignedInLinks = (props) => {\r\n  const { profile, auth } = props;\r\n  const admin = profile.role === 'neo' ? <NavLink to=\"/create\">Create opinion</NavLink> : null;\r\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n  return (\r\n    <>\r\n      <li>\r\n        <NavLink to=\"/users\">People</NavLink>\r\n      </li>\r\n      <li>{admin}</li>\r\n      <li>\r\n        <NavLink to=\"/userprofile\">{profile.userName}</NavLink>\r\n      </li>\r\n      <li>\r\n        <a onClick={props.signOut}>Log Out</a>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.firebase.profile,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignedInLinks);\r\n","E:\\Coding\\louvre\\src\\components\\layout\\SignedOutLinks.js",[],"E:\\Coding\\louvre\\src\\store\\actions\\authActions.js",[],"E:\\Coding\\louvre\\src\\store\\reducers\\postReducer.js",[],"E:\\Coding\\louvre\\src\\store\\actions\\postActions.js",[],"E:\\Coding\\louvre\\src\\components\\posts\\PostsList.js",[],"E:\\Coding\\louvre\\src\\components\\posts\\PostSummary.js",["128"],"import React, { Component } from 'react';\r\nimport moment from 'moment';\r\n\r\nclass PostSummary extends Component {\r\n  state = {\r\n    id: this.props.post.id,\r\n  };\r\n  render() {\r\n    const { post } = this.props;\r\n    return (\r\n      <div className=\"post\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-image postImage\">\r\n            <img src={post.img} alt=\"post-image\" />\r\n          </div>\r\n          <div className=\"card-content postContent\">\r\n            <span className=\"card-title postTitle\">{post.title}</span>\r\n          </div>\r\n          <div className=\"card-content greytext text-darken-3\">\r\n            <span className=\"card-title pulse louvFontColor \">\r\n              {post.likes}\r\n              <i className=\"material-icons\">flash_on</i>\r\n            </span>\r\n            {post.tags && (\r\n              <div className=\"tags\">\r\n                {post.tags.split(',').map((tag, key) => {\r\n                  return (\r\n                    <span className=\"tag\" key={key}>\r\n                      {tag}\r\n                    </span>\r\n                  );\r\n                })}\r\n              </div>\r\n            )}\r\n            {moment(post.createdAt.toDate()).calendar()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostSummary;\r\n","E:\\Coding\\louvre\\src\\components\\posts\\CreatePost.js",[],"E:\\Coding\\louvre\\src\\components\\posts\\PostDetails.js",["129","130"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { likePost, deletePost } from '../../store/actions/postActions';\r\nimport moment from 'moment';\r\nimport PostComments from './PostComments';\r\nimport EditPost from './EditPost';\r\nimport MDEditor from '@uiw/react-md-editor';\r\n\r\nclass PostDetails extends Component {\r\n  state = {\r\n    editMode: false,\r\n  };\r\n  render() {\r\n    const { post, auth, postId, profile } = this.props;\r\n    const editor = <EditPost post={post} postId={postId} />;\r\n    const postHeader = {\r\n      background: `url(${post && post.img}) no-repeat`,\r\n      backgroundSize: 'cover  ',\r\n      backgroundPosition: 'center',\r\n      backgroundAttachment: 'fixed',\r\n      minHeight: '300px',\r\n      color: '#fff',\r\n      display: 'flex',\r\n    };\r\n    if (post) {\r\n      return (\r\n        <div className=\"postDetail\">\r\n          <div className=\"postHeader\" style={postHeader}>\r\n            <h1 className=\"louvColor\">{post.title}</h1>\r\n          </div>\r\n          <div className=\"container\">\r\n            <div className=\"card z-depth-0\">\r\n              <div className=\"card-content\">\r\n                <div className=\"editMode right\">\r\n                  {profile.role === 'neo' ? (\r\n                    <button\r\n                      className=\"btn louvColor\"\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        this.setState({\r\n                          editMode: !this.state.editMode,\r\n                        });\r\n                      }}>\r\n                      {this.state.editMode === false ? (\r\n                        <i className=\"material-icons\">edit</i>\r\n                      ) : (\r\n                        <i className=\"material-icons\">cancel</i>\r\n                      )}\r\n                    </button>\r\n                  ) : null}\r\n                </div>\r\n                {this.state.editMode === true ? editor : null}\r\n                <div className=\"postTitle\">\r\n                  <button\r\n                    className=\"btn z-depth-0 grey\"\r\n                    onClick={(e) => {\r\n                      this.props.history.push('/');\r\n                    }}>\r\n                    <i className=\"material-icons\">chevron_left</i>\r\n                  </button>\r\n                  {profile.role === 'neo' ? (\r\n                    <div className=\"edit right\">\r\n                      <div className=\"delPost\">\r\n                        <button\r\n                          className=\"btn z-depth-0 louvColor\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            this.props.deletePost(postId);\r\n                            this.props.history.push('/');\r\n                          }}>\r\n                          <i className=\"material-icons\">clear</i>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n                {post.video ? (\r\n                  <div className=\"video-container\">\r\n                    <div\r\n                      dangerouslySetInnerHTML={{\r\n                        __html: post.video,\r\n                      }}></div>\r\n                  </div>\r\n                ) : null}\r\n\r\n                <div className=\"postInnerContent\">\r\n                  {/* <div\r\n                    dangerouslySetInnerHTML={{\r\n                      __html: post.content,\r\n                    }}></div> */}\r\n                  <MDEditor.Markdown source={post.content} />\r\n                  <div className=\"postLike\">\r\n                    <button\r\n                      className=\"btn black pulse\"\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        this.props.likePost(postId);\r\n                      }}>\r\n                      <i className=\"material-icons white-text\">flash_on</i>\r\n                      {post.likes}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                {post.tags && (\r\n                  <div className=\"tags\">\r\n                    {post.tags.split(',').map((tag, i) => {\r\n                      return (\r\n                        <span className=\"tag\" key={i}>\r\n                          {tag}\r\n                        </span>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                )}\r\n                <div className=\"card-action grey lighten-4 grey-text\">\r\n                  <div>Posted by: {post.authorUserName}</div>\r\n                  <div>{moment(post.createdAt.toDate()).calendar()}</div>\r\n                </div>\r\n                <div className=\"comments\">\r\n                  <PostComments post={post} postId={postId} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div class=\"progress\">\r\n          <div class=\"indeterminate\"></div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const posts = state.firestore.data.posts;\r\n  const post = posts ? posts[id] : null;\r\n  return {\r\n    post: post,\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile,\r\n    users: state.firestore.data.users,\r\n    postId: id,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    likePost: (postToLike) => dispatch(likePost(postToLike)),\r\n    deletePost: (post) => dispatch(deletePost(post)),\r\n  };\r\n};\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  firestoreConnect([{ collection: 'posts' }, { collection: 'users' }]),\r\n)(PostDetails);\r\n","E:\\Coding\\louvre\\src\\components\\posts\\PostComments.js",[],"E:\\Coding\\louvre\\src\\components\\main\\Gallery.js",["131","132"],"import React, { Component } from 'react';\r\nimport PostsList from '../posts/PostsList';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nclass Gallery extends Component {\r\n  render() {\r\n    const { posts, auth } = this.props;\r\n    return (\r\n      <div>\r\n        <PostsList posts={posts} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.firestore.ordered.posts,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: 'posts' }]),\r\n)(Gallery);\r\n","E:\\Coding\\louvre\\src\\components\\layout\\Header.js",[],"E:\\Coding\\louvre\\src\\components\\layout\\Footer.js",[],"E:\\Coding\\louvre\\src\\components\\layout\\Profile.js",[],"E:\\Coding\\louvre\\src\\components\\posts\\EditPost.js",[],"E:\\Coding\\louvre\\src\\components\\main\\Intro.js",[],"E:\\Coding\\louvre\\src\\components\\main\\Users.js",[],"E:\\Coding\\louvre\\src\\components\\posts\\NewPostDemo.js",[],{"ruleId":"133","severity":1,"message":"134","line":31,"column":3,"nodeType":"135","messageId":"136","endLine":31,"endColumn":9},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":34,"column":15,"nodeType":"143","endLine":40,"endColumn":20},{"ruleId":"141","severity":1,"message":"142","line":59,"column":11,"nodeType":"143","endLine":65,"endColumn":16},{"ruleId":"144","severity":1,"message":"145","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":25},{"ruleId":"141","severity":1,"message":"142","line":21,"column":9,"nodeType":"143","endLine":21,"endColumn":36},{"ruleId":"148","severity":1,"message":"149","line":14,"column":13,"nodeType":"143","endLine":14,"endColumn":52},{"ruleId":"144","severity":1,"message":"150","line":5,"column":10,"nodeType":"146","messageId":"147","endLine":5,"endColumn":18},{"ruleId":"144","severity":1,"message":"151","line":17,"column":19,"nodeType":"146","messageId":"147","endLine":17,"endColumn":23},{"ruleId":"144","severity":1,"message":"150","line":6,"column":10,"nodeType":"146","messageId":"147","endLine":6,"endColumn":18},{"ruleId":"144","severity":1,"message":"151","line":9,"column":20,"nodeType":"146","messageId":"147","endLine":9,"endColumn":24},"no-dupe-keys","Duplicate key 'config'.","ObjectExpression","unexpected","no-native-reassign",["152"],"no-negated-in-lhs",["153"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Redirect' is defined but never used.","'auth' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]